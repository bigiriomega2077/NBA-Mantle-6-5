{"ast":null,"code":"var _jsxFileName = \"/Users/dzhang/Downloads/Recruiting/Coding/NBA-Mantle-6-5/nba-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NBAGuessGame = () => {\n  _s();\n  const [targetPlayer, setTargetPlayer] = useState('');\n  const [guess, setGuess] = useState('');\n  const [guessHistory, setGuessHistory] = useState([]);\n  const [gameWon, setGameWon] = useState(false);\n  const [guessCount, setGuessCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [top5Players, setTop5Players] = useState([]);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [allPlayersData, setAllPlayersData] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n  const [modernPlayersOnly, setModernPlayersOnly] = useState(false);\n\n  // Fallback modern NBA players (only used if JSON loading fails)\n  const modernPlayers = ['LeBron James', 'Stephen Curry', 'Kevin Durant', 'Giannis Antetokounmpo', 'Luka Doncic', 'Jayson Tatum', 'Joel Embiid', 'Nikola Jokic', 'Damian Lillard', 'Jimmy Butler', 'Kawhi Leonard', 'Anthony Davis', 'Russell Westbrook', 'James Harden', 'Chris Paul', 'Klay Thompson', 'Draymond Green', 'Paul George', 'Kyrie Irving', 'Bradley Beal', 'Devin Booker', 'Donovan Mitchell', 'Ja Morant', 'Trae Young', 'Zion Williamson', 'Pascal Siakam', 'Bam Adebayo', 'Jaylen Brown', 'Tyler Herro'];\n  const getFilteredPlayers = () => {\n    if (!modernPlayersOnly || Object.keys(allPlayersData).length === 0) {\n      return allPlayers;\n    }\n    return allPlayers.filter(playerName => {\n      const playerData = allPlayersData[playerName];\n      return playerData && playerData.start_year >= 2000;\n    });\n  };\n  const startNewGame = () => {\n    const playersToUse = getFilteredPlayers();\n    const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n    setTargetPlayer(randomPlayer);\n    setGuess('');\n    setGuessHistory([]);\n    setGameWon(false);\n    setGuessCount(0);\n    setError('');\n    setTop5Players([]);\n    setShowAnswer(false);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n    console.log('New game started with:', randomPlayer);\n  };\n  const togglePlayerFilter = () => {\n    setModernPlayersOnly(!modernPlayersOnly);\n    // Start a new game with the new filter\n    setTimeout(() => {\n      const playersToUse = !modernPlayersOnly ? getFilteredPlayers() : allPlayers;\n      const filteredPlayers = !modernPlayersOnly ? allPlayers.filter(playerName => {\n        const playerData = allPlayersData[playerName];\n        return playerData && playerData.start_year >= 2000;\n      }) : allPlayers;\n      const randomPlayer = filteredPlayers[Math.floor(Math.random() * filteredPlayers.length)];\n      setTargetPlayer(randomPlayer);\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    }, 0);\n  };\n  useEffect(() => {\n    const loadPlayerNames = async () => {\n      try {\n        const response = await fetch('/players_cleaned.json');\n        const data = await response.json();\n        setAllPlayersData(data);\n        const playerNames = Object.keys(data);\n\n        // Clean and filter player names to remove problematic entries\n        const cleanedNames = playerNames.filter(name => {\n          const trimmed = name.trim();\n          return trimmed.length >= 3 && !trimmed.includes('?') && !trimmed.includes('!') && !trimmed.includes('undefined') && !trimmed.includes('null') && /^[a-zA-Z\\s\\-\\.\\']+$/.test(trimmed);\n        });\n        const uniquePlayerNames = [...new Set(cleanedNames)].sort();\n        setAllPlayers(uniquePlayerNames);\n\n        // Start with filtered players based on initial filter state\n        const playersToUse = modernPlayersOnly ? uniquePlayerNames.filter(playerName => {\n          const playerData = data[playerName];\n          return playerData && playerData.start_year >= 2000;\n        }) : uniquePlayerNames;\n        const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n        setTargetPlayer(randomPlayer);\n      } catch (error) {\n        console.error('Could not load players_cleaned.json', error);\n        const fallback = [...new Set(modernPlayers)].sort();\n        setAllPlayers(fallback);\n        setAllPlayersData({});\n        const randomPlayer = fallback[Math.floor(Math.random() * fallback.length)];\n        setTargetPlayer(randomPlayer);\n      }\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    };\n    loadPlayerNames();\n  }, []);\n  const makeGuess = async () => {\n    if (!guess.trim()) return;\n    setShowSuggestions(false);\n    setSuggestions([]);\n    setSelectedSuggestionIndex(-1);\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: guess.trim(),\n          target: targetPlayer\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        const {\n          score,\n          matched_name,\n          breakdown,\n          top_5\n        } = result;\n        const newGuess = {\n          name: matched_name || guess.trim(),\n          score: score,\n          breakdown: breakdown || {}\n        };\n        const alreadyGuessed = guessHistory.some(g => g.name === newGuess.name);\n        if (!alreadyGuessed) {\n          setGuessHistory(prev => {\n            const updated = [...prev, newGuess];\n            return updated.sort((a, b) => b.score - a.score).slice(0, 15);\n          });\n          setGuessCount(prev => prev + 1);\n          if (score === 100) {\n            setGameWon(true);\n            setTop5Players(top_5 || []);\n          }\n        } else {\n          setError('You have already guessed this player!');\n        }\n        setGuess('');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Unknown error occurred');\n      }\n    } catch (err) {\n      setError('Connection error. Make sure the Flask server is running on port 5000');\n    }\n    setLoading(false);\n  };\n  const revealAnswer = async () => {\n    if (!targetPlayer) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: targetPlayer,\n          target: targetPlayer\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setTop5Players(result.top_5 || []);\n      }\n    } catch (err) {\n      console.error('Error fetching top 5:', err);\n    }\n    setShowAnswer(true);\n    setLoading(false);\n  };\n  const handleSuggestionSelect = selectedName => {\n    setGuess(selectedName);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n  };\n  const getScoreColor = score => {\n    if (score >= 80) return '#10b981';\n    if (score >= 60) return '#f59e0b';\n    if (score >= 40) return '#f97316';\n    return '#ef4444';\n  };\n  const ScoreBar = ({\n    score,\n    showLabel = true\n  }) => {\n    const percentage = Math.max(0, Math.min(100, score));\n    const color = getScoreColor(score);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.75rem',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          height: '1.5rem',\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '0.75rem',\n          overflow: 'hidden',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100%',\n            width: `${percentage}%`,\n            background: `linear-gradient(90deg, ${color}dd, ${color})`,\n            borderRadius: '0.75rem',\n            transition: 'width 0.8s ease-out',\n            boxShadow: `0 0 10px ${color}40`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), showLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '0.75rem',\n            transform: 'translateY(-50%)',\n            fontSize: '0.75rem',\n            fontWeight: 'bold',\n            color: percentage > 30 ? 'white' : color,\n            textShadow: percentage > 30 ? '0 1px 2px rgba(0,0,0,0.8)' : 'none'\n          },\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.9rem',\n          fontWeight: 'bold',\n          color: color,\n          minWidth: '3rem',\n          textAlign: 'right'\n        },\n        children: [score, \"/100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  };\n  const formatBreakdownKey = key => {\n    const labels = {\n      shared_seasons: 'Shared Seasons',\n      shared_streak_bonus: 'Streak Bonus',\n      teammate_years: 'Teammate Years',\n      franchise_overlap: 'Team Overlap',\n      franchise_tenure_bonus: 'Tenure Bonus',\n      archetype: 'Archetype',\n      position: 'Position',\n      draft_diff: 'Draft Era',\n      era_diff: 'Career Era',\n      career_end_proximity: 'Career End',\n      career_length: 'Career Length'\n    };\n    return labels[key] || key;\n  };\n  const filteredPlayers = getFilteredPlayers();\n  const modernCount = Object.keys(allPlayersData).length > 0 ? Object.keys(allPlayersData).filter(name => {\n    const playerData = allPlayersData[name];\n    return playerData && playerData.start_year >= 2000;\n  }).length : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #1e40af 100%)',\n      color: 'white',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '1200px',\n        margin: '0 auto',\n        padding: '2rem 1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '1rem',\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '2rem'\n            },\n            children: \"\\uD83C\\uDFC0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '3rem',\n              fontWeight: 'bold',\n              background: 'linear-gradient(45deg, #f97316, #ef4444)',\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent',\n              margin: 0\n            },\n            children: \"NBA Similarity Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '2rem'\n            },\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#cbd5e1',\n            marginBottom: '1rem'\n          },\n          children: \"Guess the mystery NBA player by finding similar players!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '1rem',\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlayerFilter,\n            style: {\n              padding: '0.5rem 1rem',\n              background: modernPlayersOnly ? 'linear-gradient(45deg, #3b82f6, #8b5cf6)' : 'linear-gradient(45deg, #6b7280, #4b5563)',\n              border: 'none',\n              borderRadius: '0.5rem',\n              color: 'white',\n              fontWeight: '600',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              transition: 'all 0.2s ease'\n            },\n            children: [modernPlayersOnly ? '🎮' : '📚', modernPlayersOnly ? 'Modern Players (2000+)' : 'All Players']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '2rem',\n            fontSize: '0.9rem',\n            color: '#94a3b8'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u26A1 Attempt #\", guessCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#64748b'\n            },\n            children: \"Mystery Player: ???\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), (gameWon || showAnswer) && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981',\n              fontWeight: 'bold'\n            },\n            children: [\"Answer: \", targetPlayer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: window.innerWidth > 1024 ? '1fr 2fr' : '1fr',\n          gap: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '1.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: \"\\uD83D\\uDD0D Make Your Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '1rem',\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: guess,\n                onChange: e => {\n                  const value = e.target.value;\n                  setGuess(value);\n                  setSelectedSuggestionIndex(-1);\n                  if (value.length > 0) {\n                    const searchTerm = value.toLowerCase().trim();\n                    const filtered = filteredPlayers.filter(name => {\n                      const cleanName = name.toLowerCase().trim();\n                      if (cleanName.includes('?') || cleanName.includes('!') || cleanName.length < 3) {\n                        return false;\n                      }\n                      return cleanName.includes(searchTerm);\n                    });\n                    const uniqueFiltered = [...new Set(filtered)].sort((a, b) => {\n                      const aLower = a.toLowerCase();\n                      const bLower = b.toLowerCase();\n                      const aStartsWith = aLower.startsWith(searchTerm);\n                      const bStartsWith = bLower.startsWith(searchTerm);\n                      if (aStartsWith && !bStartsWith) return -1;\n                      if (!aStartsWith && bStartsWith) return 1;\n                      return a.localeCompare(b);\n                    }).slice(0, 8);\n                    setSuggestions(uniqueFiltered);\n                    setShowSuggestions(true);\n                  } else {\n                    setSuggestions([]);\n                    setShowSuggestions(false);\n                  }\n                  if (error) setError('');\n                },\n                onKeyDown: e => {\n                  if (showSuggestions && suggestions.length > 0) {\n                    if (e.key === 'ArrowDown') {\n                      e.preventDefault();\n                      setSelectedSuggestionIndex(prev => prev < suggestions.length - 1 ? prev + 1 : 0);\n                    } else if (e.key === 'ArrowUp') {\n                      e.preventDefault();\n                      setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : suggestions.length - 1);\n                    } else if (e.key === 'Enter') {\n                      e.preventDefault();\n                      if (selectedSuggestionIndex >= 0) {\n                        handleSuggestionSelect(suggestions[selectedSuggestionIndex]);\n                      } else {\n                        makeGuess();\n                      }\n                    } else if (e.key === 'Escape') {\n                      setShowSuggestions(false);\n                      setSuggestions([]);\n                      setSelectedSuggestionIndex(-1);\n                    }\n                  } else if (e.key === 'Enter') {\n                    e.preventDefault();\n                    makeGuess();\n                  }\n                },\n                onBlur: () => {\n                  setTimeout(() => {\n                    setShowSuggestions(false);\n                    setSuggestions([]);\n                    setSelectedSuggestionIndex(-1);\n                  }, 150);\n                },\n                placeholder: \"Enter NBA player name...\",\n                style: {\n                  width: '100%',\n                  padding: '0.75rem',\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontSize: '1rem',\n                  outline: 'none',\n                  boxSizing: 'border-box'\n                },\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  position: 'absolute',\n                  top: '100%',\n                  left: 0,\n                  right: 0,\n                  marginTop: '0.25rem',\n                  background: 'white',\n                  borderRadius: '0.5rem',\n                  padding: '0.5rem 0',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n                  color: 'black',\n                  maxHeight: '200px',\n                  overflowY: 'auto',\n                  zIndex: 1000,\n                  listStyle: 'none',\n                  margin: 0\n                },\n                children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onMouseDown: e => {\n                    e.preventDefault();\n                    handleSuggestionSelect(suggestion);\n                  },\n                  onMouseEnter: () => setSelectedSuggestionIndex(index),\n                  style: {\n                    padding: '0.5rem 1rem',\n                    backgroundColor: index === selectedSuggestionIndex ? '#f0f0f0' : 'white',\n                    cursor: 'pointer',\n                    borderRadius: index === selectedSuggestionIndex ? '0.25rem' : '0',\n                    margin: index === selectedSuggestionIndex ? '0 0.25rem' : '0'\n                  },\n                  children: suggestion\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: makeGuess,\n                disabled: loading || !guess.trim(),\n                style: {\n                  width: '100%',\n                  padding: '0.75rem',\n                  background: loading || !guess.trim() ? 'linear-gradient(45deg, #6b7280, #4b5563)' : 'linear-gradient(45deg, #3b82f6, #8b5cf6)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontSize: '1rem',\n                  fontWeight: '600',\n                  cursor: loading || !guess.trim() ? 'not-allowed' : 'pointer',\n                  transition: 'all 0.2s ease'\n                },\n                children: loading ? 'Searching...' : 'Submit Guess'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem',\n                padding: '0.75rem',\n                background: 'rgba(239, 68, 68, 0.2)',\n                border: '1px solid rgba(239, 68, 68, 0.3)',\n                borderRadius: '0.5rem',\n                color: '#fca5a5'\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '3rem',\n                  marginBottom: '1rem'\n                },\n                children: \"\\uD83C\\uDF89\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#10b981',\n                  fontWeight: '600',\n                  fontSize: '1.2rem'\n                },\n                children: [\"Congratulations! You found \", targetPlayer, \" in \", guessCount, \" guesses!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this), showAnswer && !gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '3rem',\n                  marginBottom: '1rem'\n                },\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#3b82f6',\n                  fontWeight: '600',\n                  fontSize: '1.2rem'\n                },\n                children: [\"The answer was \", targetPlayer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.75rem',\n                marginTop: '1.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startNewGame,\n                style: {\n                  flex: 1,\n                  padding: '0.5rem 1rem',\n                  background: 'linear-gradient(45deg, #10b981, #059669)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '0.5rem'\n                },\n                children: \"\\uD83D\\uDD04 New Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: revealAnswer,\n                style: {\n                  flex: 1,\n                  padding: '0.5rem 1rem',\n                  background: 'linear-gradient(45deg, #f97316, #ef4444)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '0.5rem'\n                },\n                children: \"\\uD83D\\uDC41\\uFE0F Reveal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), top5Players.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: \"\\uD83D\\uDCC8 Top 5 Most Similar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '1rem'\n              },\n              children: top5Players.map(([name, score], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '1rem',\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  borderRadius: '0.75rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.75rem',\n                    marginBottom: '0.75rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      width: '1.5rem',\n                      height: '1.5rem',\n                      background: 'linear-gradient(45deg, #f59e0b, #f97316)',\n                      borderRadius: '50%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontSize: '0.75rem',\n                      fontWeight: 'bold',\n                      color: 'black'\n                    },\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: '500',\n                      flex: 1\n                    },\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ScoreBar, {\n                  score: score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 23\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255, 255, 255, 0.1)',\n            backdropFilter: 'blur(10px)',\n            borderRadius: '1rem',\n            padding: '1.5rem',\n            border: '1px solid rgba(255, 255, 255, 0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: '600',\n              marginBottom: '1rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [\"\\uD83D\\uDC65 Guess History (\", guessHistory.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this), guessHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: '3rem 0',\n              color: '#94a3b8'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '3rem',\n                marginBottom: '1rem',\n                opacity: 0.5\n              },\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No guesses yet. Start by entering a player name!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '1rem',\n              maxHeight: '500px',\n              overflowY: 'auto'\n            },\n            children: guessHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'rgba(255, 255, 255, 0.05)',\n                borderRadius: '0.75rem',\n                padding: '1rem',\n                border: '1px solid rgba(255, 255, 255, 0.1)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '1.1rem',\n                    fontWeight: '600',\n                    margin: 0,\n                    flex: 1\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(ScoreBar, {\n                  score: item.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 21\n              }, this), item.breakdown && Object.keys(item.breakdown).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                  gap: '0.5rem',\n                  fontSize: '0.8rem'\n                },\n                children: Object.entries(item.breakdown).filter(([key, value]) => key !== 'total' && key !== 'shared_seasons_detail' && value > 0).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    padding: '0.4rem 0.6rem',\n                    background: 'rgba(255, 255, 255, 0.05)',\n                    borderRadius: '0.25rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#cbd5e1'\n                    },\n                    children: formatBreakdownKey(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'white',\n                      fontWeight: '500'\n                    },\n                    children: [\"+\", value]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 31\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(NBAGuessGame, \"4bBjiv5V6d8PQpewlRItfgoBjHg=\");\n_c = NBAGuessGame;\nexport default NBAGuessGame;\nvar _c;\n$RefreshReg$(_c, \"NBAGuessGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NBAGuessGame","_s","targetPlayer","setTargetPlayer","guess","setGuess","guessHistory","setGuessHistory","gameWon","setGameWon","guessCount","setGuessCount","loading","setLoading","error","setError","top5Players","setTop5Players","showAnswer","setShowAnswer","allPlayers","setAllPlayers","allPlayersData","setAllPlayersData","suggestions","setSuggestions","showSuggestions","setShowSuggestions","selectedSuggestionIndex","setSelectedSuggestionIndex","modernPlayersOnly","setModernPlayersOnly","modernPlayers","getFilteredPlayers","Object","keys","length","filter","playerName","playerData","start_year","startNewGame","playersToUse","randomPlayer","Math","floor","random","console","log","togglePlayerFilter","setTimeout","filteredPlayers","loadPlayerNames","response","fetch","data","json","playerNames","cleanedNames","name","trimmed","trim","includes","test","uniquePlayerNames","Set","sort","fallback","makeGuess","method","headers","body","JSON","stringify","target","ok","result","score","matched_name","breakdown","top_5","newGuess","alreadyGuessed","some","g","prev","updated","a","b","slice","errorData","err","revealAnswer","handleSuggestionSelect","selectedName","getScoreColor","ScoreBar","showLabel","percentage","max","min","color","style","display","alignItems","gap","width","children","flex","height","background","borderRadius","overflow","position","transition","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","fontWeight","textShadow","minWidth","textAlign","formatBreakdownKey","key","labels","shared_seasons","shared_streak_bonus","teammate_years","franchise_overlap","franchise_tenure_bonus","archetype","draft_diff","era_diff","career_end_proximity","career_length","modernCount","minHeight","fontFamily","maxWidth","margin","padding","marginBottom","justifyContent","WebkitBackgroundClip","WebkitTextFillColor","onClick","border","cursor","gridTemplateColumns","window","innerWidth","flexDirection","backdropFilter","type","value","onChange","e","searchTerm","toLowerCase","filtered","cleanName","uniqueFiltered","aLower","bLower","aStartsWith","startsWith","bStartsWith","localeCompare","onKeyDown","preventDefault","onBlur","placeholder","outline","boxSizing","disabled","right","marginTop","maxHeight","overflowY","zIndex","listStyle","map","suggestion","index","onMouseDown","onMouseEnter","backgroundColor","opacity","item","entries","_c","$RefreshReg$"],"sources":["/Users/dzhang/Downloads/Recruiting/Coding/NBA-Mantle-6-5/nba-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst NBAGuessGame = () => {\n  const [targetPlayer, setTargetPlayer] = useState('');\n  const [guess, setGuess] = useState('');\n  const [guessHistory, setGuessHistory] = useState([]);\n  const [gameWon, setGameWon] = useState(false);\n  const [guessCount, setGuessCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [top5Players, setTop5Players] = useState([]);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [allPlayersData, setAllPlayersData] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n  const [modernPlayersOnly, setModernPlayersOnly] = useState(false);\n\n  // Fallback modern NBA players (only used if JSON loading fails)\n  const modernPlayers = [\n    'LeBron James', 'Stephen Curry', 'Kevin Durant', 'Giannis Antetokounmpo',\n    'Luka Doncic', 'Jayson Tatum', 'Joel Embiid', 'Nikola Jokic', 'Damian Lillard',\n    'Jimmy Butler', 'Kawhi Leonard', 'Anthony Davis', 'Russell Westbrook',\n    'James Harden', 'Chris Paul', 'Klay Thompson', 'Draymond Green',\n    'Paul George', 'Kyrie Irving', 'Bradley Beal', 'Devin Booker',\n    'Donovan Mitchell', 'Ja Morant', 'Trae Young', 'Zion Williamson',\n    'Pascal Siakam', 'Bam Adebayo', 'Jaylen Brown', 'Tyler Herro'\n  ];\n\n  const getFilteredPlayers = () => {\n    if (!modernPlayersOnly || Object.keys(allPlayersData).length === 0) {\n      return allPlayers;\n    }\n    \n    return allPlayers.filter(playerName => {\n      const playerData = allPlayersData[playerName];\n      return playerData && playerData.start_year >= 2000;\n    });\n  };\n\n  const startNewGame = () => {\n    const playersToUse = getFilteredPlayers();\n    const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n    \n    setTargetPlayer(randomPlayer);\n    setGuess('');\n    setGuessHistory([]);\n    setGameWon(false);\n    setGuessCount(0);\n    setError('');\n    setTop5Players([]);\n    setShowAnswer(false);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n    \n    console.log('New game started with:', randomPlayer);\n  };\n\n  const togglePlayerFilter = () => {\n    setModernPlayersOnly(!modernPlayersOnly);\n    // Start a new game with the new filter\n    setTimeout(() => {\n      const playersToUse = !modernPlayersOnly ? getFilteredPlayers() : allPlayers;\n      const filteredPlayers = !modernPlayersOnly ? \n        allPlayers.filter(playerName => {\n          const playerData = allPlayersData[playerName];\n          return playerData && playerData.start_year >= 2000;\n        }) : allPlayers;\n      \n      const randomPlayer = filteredPlayers[Math.floor(Math.random() * filteredPlayers.length)];\n      setTargetPlayer(randomPlayer);\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    }, 0);\n  };\n\n  useEffect(() => {\n    const loadPlayerNames = async () => {\n      try {\n        const response = await fetch('/players_cleaned.json');\n        const data = await response.json();\n        setAllPlayersData(data);\n        const playerNames = Object.keys(data);\n        \n        // Clean and filter player names to remove problematic entries\n        const cleanedNames = playerNames.filter(name => {\n          const trimmed = name.trim();\n          return trimmed.length >= 3 && \n                 !trimmed.includes('?') && \n                 !trimmed.includes('!') && \n                 !trimmed.includes('undefined') &&\n                 !trimmed.includes('null') &&\n                 /^[a-zA-Z\\s\\-\\.\\']+$/.test(trimmed);\n        });\n        \n        const uniquePlayerNames = [...new Set(cleanedNames)].sort();\n        setAllPlayers(uniquePlayerNames);\n\n        // Start with filtered players based on initial filter state\n        const playersToUse = modernPlayersOnly ? \n          uniquePlayerNames.filter(playerName => {\n            const playerData = data[playerName];\n            return playerData && playerData.start_year >= 2000;\n          }) : uniquePlayerNames;\n\n        const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n        setTargetPlayer(randomPlayer);\n      } catch (error) {\n        console.error('Could not load players_cleaned.json', error);\n        const fallback = [...new Set(modernPlayers)].sort();\n        setAllPlayers(fallback);\n        setAllPlayersData({});\n\n        const randomPlayer = fallback[Math.floor(Math.random() * fallback.length)];\n        setTargetPlayer(randomPlayer);\n      }\n\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    };\n\n    loadPlayerNames();\n  }, []);\n\n  const makeGuess = async () => {\n    if (!guess.trim()) return;\n    \n    setShowSuggestions(false);\n    setSuggestions([]);\n    setSelectedSuggestionIndex(-1);\n    \n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          guess: guess.trim(),\n          target: targetPlayer\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        const { score, matched_name, breakdown, top_5 } = result;\n\n        const newGuess = {\n          name: matched_name || guess.trim(),\n          score: score,\n          breakdown: breakdown || {}\n        };\n\n        const alreadyGuessed = guessHistory.some(g => g.name === newGuess.name);\n        \n        if (!alreadyGuessed) {\n          setGuessHistory(prev => {\n            const updated = [...prev, newGuess];\n            return updated.sort((a, b) => b.score - a.score).slice(0, 15);\n          });\n\n          setGuessCount(prev => prev + 1);\n\n          if (score === 100) {\n            setGameWon(true);\n            setTop5Players(top_5 || []);\n          }\n        } else {\n          setError('You have already guessed this player!');\n        }\n\n        setGuess('');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Unknown error occurred');\n      }\n    } catch (err) {\n      setError('Connection error. Make sure the Flask server is running on port 5000');\n    }\n\n    setLoading(false);\n  };\n\n  const revealAnswer = async () => {\n    if (!targetPlayer) return;\n    \n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          guess: targetPlayer,\n          target: targetPlayer\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setTop5Players(result.top_5 || []);\n      }\n    } catch (err) {\n      console.error('Error fetching top 5:', err);\n    }\n    \n    setShowAnswer(true);\n    setLoading(false);\n  };\n\n  const handleSuggestionSelect = (selectedName) => {\n    setGuess(selectedName);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n  };\n\n  const getScoreColor = (score) => {\n    if (score >= 80) return '#10b981';\n    if (score >= 60) return '#f59e0b';\n    if (score >= 40) return '#f97316';\n    return '#ef4444';\n  };\n\n  const ScoreBar = ({ score, showLabel = true }) => {\n    const percentage = Math.max(0, Math.min(100, score));\n    const color = getScoreColor(score);\n    \n    return (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.75rem',\n        width: '100%'\n      }}>\n        <div style={{\n          flex: 1,\n          height: '1.5rem',\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '0.75rem',\n          overflow: 'hidden',\n          position: 'relative'\n        }}>\n          <div style={{\n            height: '100%',\n            width: `${percentage}%`,\n            background: `linear-gradient(90deg, ${color}dd, ${color})`,\n            borderRadius: '0.75rem',\n            transition: 'width 0.8s ease-out',\n            boxShadow: `0 0 10px ${color}40`\n          }} />\n          {showLabel && (\n            <div style={{\n              position: 'absolute',\n              top: '50%',\n              left: '0.75rem',\n              transform: 'translateY(-50%)',\n              fontSize: '0.75rem',\n              fontWeight: 'bold',\n              color: percentage > 30 ? 'white' : color,\n              textShadow: percentage > 30 ? '0 1px 2px rgba(0,0,0,0.8)' : 'none'\n            }}>\n              {score}\n            </div>\n          )}\n        </div>\n        <div style={{\n          fontSize: '0.9rem',\n          fontWeight: 'bold',\n          color: color,\n          minWidth: '3rem',\n          textAlign: 'right'\n        }}>\n          {score}/100\n        </div>\n      </div>\n    );\n  };\n\n  const formatBreakdownKey = (key) => {\n    const labels = {\n      shared_seasons: 'Shared Seasons',\n      shared_streak_bonus: 'Streak Bonus',\n      teammate_years: 'Teammate Years',\n      franchise_overlap: 'Team Overlap',\n      franchise_tenure_bonus: 'Tenure Bonus',\n      archetype: 'Archetype',\n      position: 'Position',\n      draft_diff: 'Draft Era',\n      era_diff: 'Career Era',\n      career_end_proximity: 'Career End',\n      career_length: 'Career Length'\n    };\n    return labels[key] || key;\n  };\n\n  const filteredPlayers = getFilteredPlayers();\n  const modernCount = Object.keys(allPlayersData).length > 0 ? \n    Object.keys(allPlayersData).filter(name => {\n      const playerData = allPlayersData[name];\n      return playerData && playerData.start_year >= 2000;\n    }).length : 0;\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #1e40af 100%)',\n      color: 'white',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        padding: '2rem 1rem'\n      }}>\n        {/* Header */}\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n          <div style={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center', \n            gap: '1rem',\n            marginBottom: '1rem'\n          }}>\n            <span style={{ fontSize: '2rem' }}>🏀</span>\n            <h1 style={{\n              fontSize: '3rem',\n              fontWeight: 'bold',\n              background: 'linear-gradient(45deg, #f97316, #ef4444)',\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent',\n              margin: 0\n            }}>\n              NBA Similarity Game\n            </h1>\n            <span style={{ fontSize: '2rem' }}>🎯</span>\n          </div>\n          \n          <p style={{ \n            fontSize: '1.2rem', \n            color: '#cbd5e1',\n            marginBottom: '1rem'\n          }}>\n            Guess the mystery NBA player by finding similar players!\n          </p>\n          \n          {/* Player Filter Toggle */}\n          <div style={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center', \n            gap: '1rem',\n            marginBottom: '1rem'\n          }}>\n            <button\n              onClick={togglePlayerFilter}\n              style={{\n                padding: '0.5rem 1rem',\n                background: modernPlayersOnly \n                  ? 'linear-gradient(45deg, #3b82f6, #8b5cf6)'\n                  : 'linear-gradient(45deg, #6b7280, #4b5563)',\n                border: 'none',\n                borderRadius: '0.5rem',\n                color: 'white',\n                fontWeight: '600',\n                cursor: 'pointer',\n                fontSize: '0.9rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem',\n                transition: 'all 0.2s ease'\n              }}\n            >\n              {modernPlayersOnly ? '🎮' : '📚'} \n              {modernPlayersOnly ? 'Modern Players (2000+)' : 'All Players'}\n            </button>\n          </div>\n          \n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '2rem',\n            fontSize: '0.9rem',\n            color: '#94a3b8'\n          }}>\n            <span>⚡ Attempt #{guessCount}</span>\n            {!gameWon && !showAnswer && (\n              <span style={{ color: '#64748b' }}>Mystery Player: ???</span>\n            )}\n            {(gameWon || showAnswer) && (\n              <span style={{ color: '#10b981', fontWeight: 'bold' }}>\n                Answer: {targetPlayer}\n              </span>\n            )}\n          </div>\n        </div>\n\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: window.innerWidth > 1024 ? '1fr 2fr' : '1fr',\n          gap: '2rem'\n        }}>\n          {/* Left Panel - Game Controls */}\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n            {/* Input Section */}\n            <div style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            }}>\n              <h3 style={{\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}>\n                🔍 Make Your Guess\n              </h3>\n              \n              {!gameWon && !showAnswer && (\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', position: 'relative' }}>\n                  <input\n                    type=\"text\"\n                    value={guess}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      setGuess(value);\n                      setSelectedSuggestionIndex(-1);\n                      \n                      if (value.length > 0) {\n                        const searchTerm = value.toLowerCase().trim();\n                        \n                        const filtered = filteredPlayers.filter(name => {\n                          const cleanName = name.toLowerCase().trim();\n                          if (cleanName.includes('?') || cleanName.includes('!') || cleanName.length < 3) {\n                            return false;\n                          }\n                          return cleanName.includes(searchTerm);\n                        });\n                        \n                        const uniqueFiltered = [...new Set(filtered)]\n                          .sort((a, b) => {\n                            const aLower = a.toLowerCase();\n                            const bLower = b.toLowerCase();\n                            \n                            const aStartsWith = aLower.startsWith(searchTerm);\n                            const bStartsWith = bLower.startsWith(searchTerm);\n                            \n                            if (aStartsWith && !bStartsWith) return -1;\n                            if (!aStartsWith && bStartsWith) return 1;\n                            \n                            return a.localeCompare(b);\n                          })\n                          .slice(0, 8);\n                          \n                        setSuggestions(uniqueFiltered);\n                        setShowSuggestions(true);\n                      } else {\n                        setSuggestions([]);\n                        setShowSuggestions(false);\n                      }\n                      \n                      if (error) setError('');\n                    }}\n                    onKeyDown={(e) => {\n                      if (showSuggestions && suggestions.length > 0) {\n                        if (e.key === 'ArrowDown') {\n                          e.preventDefault();\n                          setSelectedSuggestionIndex(prev => \n                            prev < suggestions.length - 1 ? prev + 1 : 0\n                          );\n                        } else if (e.key === 'ArrowUp') {\n                          e.preventDefault();\n                          setSelectedSuggestionIndex(prev => \n                            prev > 0 ? prev - 1 : suggestions.length - 1\n                          );\n                        } else if (e.key === 'Enter') {\n                          e.preventDefault();\n                          if (selectedSuggestionIndex >= 0) {\n                            handleSuggestionSelect(suggestions[selectedSuggestionIndex]);\n                          } else {\n                            makeGuess();\n                          }\n                        } else if (e.key === 'Escape') {\n                          setShowSuggestions(false);\n                          setSuggestions([]);\n                          setSelectedSuggestionIndex(-1);\n                        }\n                      } else if (e.key === 'Enter') {\n                        e.preventDefault();\n                        makeGuess();\n                      }\n                    }}\n                    onBlur={() => {\n                      setTimeout(() => {\n                        setShowSuggestions(false);\n                        setSuggestions([]);\n                        setSelectedSuggestionIndex(-1);\n                      }, 150);\n                    }}\n                    placeholder=\"Enter NBA player name...\"\n                    style={{\n                      width: '100%',\n                      padding: '0.75rem',\n                      background: 'rgba(255, 255, 255, 0.1)',\n                      border: '1px solid rgba(255, 255, 255, 0.2)',\n                      borderRadius: '0.5rem',\n                      color: 'white',\n                      fontSize: '1rem',\n                      outline: 'none',\n                      boxSizing: 'border-box'\n                    }}\n                    disabled={loading}\n                  />\n                  {showSuggestions && suggestions.length > 0 && (\n                    <ul style={{\n                      position: 'absolute',\n                      top: '100%',\n                      left: 0,\n                      right: 0,\n                      marginTop: '0.25rem',\n                      background: 'white',\n                      borderRadius: '0.5rem',\n                      padding: '0.5rem 0',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n                      color: 'black',\n                      maxHeight: '200px',\n                      overflowY: 'auto',\n                      zIndex: 1000,\n                      listStyle: 'none',\n                      margin: 0\n                    }}>\n                      {suggestions.map((suggestion, index) => (\n                        <li\n                          key={index}\n                          onMouseDown={(e) => {\n                            e.preventDefault();\n                            handleSuggestionSelect(suggestion);\n                          }}\n                          onMouseEnter={() => setSelectedSuggestionIndex(index)}\n                          style={{\n                            padding: '0.5rem 1rem',\n                            backgroundColor: index === selectedSuggestionIndex ? '#f0f0f0' : 'white',\n                            cursor: 'pointer',\n                            borderRadius: index === selectedSuggestionIndex ? '0.25rem' : '0',\n                            margin: index === selectedSuggestionIndex ? '0 0.25rem' : '0'\n                          }}\n                        >\n                          {suggestion}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                  <button\n                    onClick={makeGuess}\n                    disabled={loading || !guess.trim()}\n                    style={{\n                      width: '100%',\n                      padding: '0.75rem',\n                      background: loading || !guess.trim() \n                        ? 'linear-gradient(45deg, #6b7280, #4b5563)'\n                        : 'linear-gradient(45deg, #3b82f6, #8b5cf6)',\n                      border: 'none',\n                      borderRadius: '0.5rem',\n                      color: 'white',\n                      fontSize: '1rem',\n                      fontWeight: '600',\n                      cursor: loading || !guess.trim() ? 'not-allowed' : 'pointer',\n                      transition: 'all 0.2s ease'\n                    }}\n                  >\n                    {loading ? 'Searching...' : 'Submit Guess'}\n                  </button>\n                </div>\n\n              )}\n\n              {error && (\n                <div style={{\n                  marginTop: '1rem',\n                  padding: '0.75rem',\n                  background: 'rgba(239, 68, 68, 0.2)',\n                  border: '1px solid rgba(239, 68, 68, 0.3)',\n                  borderRadius: '0.5rem',\n                  color: '#fca5a5'\n                }}>\n                  {error}\n                </div>\n              )}\n\n              {gameWon && (\n                <div style={{ textAlign: 'center' }}>\n                  <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>🎉</div>\n                  <p style={{ color: '#10b981', fontWeight: '600', fontSize: '1.2rem' }}>\n                    Congratulations! You found {targetPlayer} in {guessCount} guesses!\n                  </p>\n                </div>\n              )}\n\n              {showAnswer && !gameWon && (\n                <div style={{ textAlign: 'center' }}>\n                  <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>🎯</div>\n                  <p style={{ color: '#3b82f6', fontWeight: '600', fontSize: '1.2rem' }}>\n                    The answer was {targetPlayer}\n                  </p>\n                </div>\n              )}\n\n              <div style={{ display: 'flex', gap: '0.75rem', marginTop: '1.5rem' }}>\n                <button\n                  onClick={startNewGame}\n                  style={{\n                    flex: 1,\n                    padding: '0.5rem 1rem',\n                    background: 'linear-gradient(45deg, #10b981, #059669)',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    color: 'white',\n                    fontWeight: '600',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: '0.5rem'\n                  }}\n                >\n                  🔄 New Game\n                </button>\n                \n                {!gameWon && !showAnswer && (\n                  <button\n                    onClick={revealAnswer}\n                    style={{\n                      flex: 1,\n                      padding: '0.5rem 1rem',\n                      background: 'linear-gradient(45deg, #f97316, #ef4444)',\n                      border: 'none',\n                      borderRadius: '0.5rem',\n                      color: 'white',\n                      fontWeight: '600',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '0.5rem'\n                    }}\n                  >\n                    👁️ Reveal\n                  </button>\n                )}\n              </div>\n            </div>\n\n            {/* Top 5 Similar Players */}\n            {top5Players.length > 0 && (\n              <div style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                backdropFilter: 'blur(10px)',\n                borderRadius: '1rem',\n                padding: '1.5rem',\n                border: '1px solid rgba(255, 255, 255, 0.2)'\n              }}>\n                <h3 style={{\n                  fontSize: '1.5rem',\n                  fontWeight: '600',\n                  marginBottom: '1rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem'\n                }}>\n                  📈 Top 5 Most Similar\n                </h3>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n                  {top5Players.map(([name, score], index) => (\n                    <div key={name} style={{\n                      padding: '1rem',\n                      background: 'rgba(255, 255, 255, 0.05)',\n                      borderRadius: '0.75rem'\n                    }}>\n                      <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.75rem',\n                        marginBottom: '0.75rem'\n                      }}>\n                        <span style={{\n                          width: '1.5rem',\n                          height: '1.5rem',\n                          background: 'linear-gradient(45deg, #f59e0b, #f97316)',\n                          borderRadius: '50%',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontSize: '0.75rem',\n                          fontWeight: 'bold',\n                          color: 'black'\n                        }}>\n                          {index + 1}\n                        </span>\n                        <span style={{ fontWeight: '500', flex: 1 }}>{name}</span>\n                      </div>\n                      <ScoreBar score={score} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Right Panel - Guess History */}\n          <div style={{\n            background: 'rgba(255, 255, 255, 0.1)',\n            backdropFilter: 'blur(10px)',\n            borderRadius: '1rem',\n            padding: '1.5rem',\n            border: '1px solid rgba(255, 255, 255, 0.2)'\n          }}>\n            <h3 style={{\n              fontSize: '1.5rem',\n              fontWeight: '600',\n              marginBottom: '1rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            }}>\n              👥 Guess History ({guessHistory.length})\n            </h3>\n            \n            {guessHistory.length === 0 ? (\n              <div style={{ \n                textAlign: 'center', \n                padding: '3rem 0', \n                color: '#94a3b8'\n              }}>\n                <div style={{ fontSize: '3rem', marginBottom: '1rem', opacity: 0.5 }}>🔍</div>\n                <p>No guesses yet. Start by entering a player name!</p>\n              </div>\n            ) : (\n              <div style={{ \n                display: 'flex', \n                flexDirection: 'column', \n                gap: '1rem',\n                maxHeight: '500px',\n                overflowY: 'auto'\n              }}>\n                {guessHistory.map((item, index) => (\n                  <div key={index} style={{\n                    background: 'rgba(255, 255, 255, 0.05)',\n                    borderRadius: '0.75rem',\n                    padding: '1rem',\n                    border: '1px solid rgba(255, 255, 255, 0.1)'\n                  }}>\n                    <div style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      marginBottom: '1rem'\n                    }}>\n                      <h4 style={{ \n                        fontSize: '1.1rem', \n                        fontWeight: '600',\n                        margin: 0,\n                        flex: 1\n                      }}>\n                        {item.name}\n                      </h4>\n                    </div>\n                    <div style={{ marginBottom: '1rem' }}>\n                      <ScoreBar score={item.score} />\n                    </div>\n                    \n                    {item.breakdown && Object.keys(item.breakdown).length > 0 && (\n                      <div style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                        gap: '0.5rem',\n                        fontSize: '0.8rem'\n                      }}>\n                        {Object.entries(item.breakdown)\n                          .filter(([key, value]) => \n                            key !== 'total' && \n                            key !== 'shared_seasons_detail' && \n                            value > 0\n                          )\n                          .map(([key, value]) => (\n                            <div key={key} style={{\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              padding: '0.4rem 0.6rem',\n                              background: 'rgba(255, 255, 255, 0.05)',\n                              borderRadius: '0.25rem'\n                            }}>\n                              <span style={{ color: '#cbd5e1' }}>\n                                {formatBreakdownKey(key)}\n                              </span>\n                              <span style={{ color: 'white', fontWeight: '500' }}>\n                                +{value}\n                              </span>\n                            </div>\n                          ))}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NBAGuessGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}