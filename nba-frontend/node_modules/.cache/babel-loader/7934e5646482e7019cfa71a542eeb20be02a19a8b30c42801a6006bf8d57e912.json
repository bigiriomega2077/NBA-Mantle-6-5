{"ast":null,"code":"var _jsxFileName = \"/Users/dzhang/Downloads/Recruiting/Coding/NBA-Mantle-6-5/nba-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NBAGuessGame = () => {\n  _s();\n  const [targetPlayer, setTargetPlayer] = useState('');\n  const [guess, setGuess] = useState('');\n  const [guessHistory, setGuessHistory] = useState([]);\n  const [gameWon, setGameWon] = useState(false);\n  const [guessCount, setGuessCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [top5Players, setTop5Players] = useState([]);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n\n  // Fallback modern NBA players (only used if JSON loading fails)\n  const modernPlayers = ['LeBron James', 'Stephen Curry', 'Kevin Durant', 'Giannis Antetokounmpo', 'Luka Doncic', 'Jayson Tatum', 'Joel Embiid', 'Nikola Jokic', 'Damian Lillard', 'Jimmy Butler', 'Kawhi Leonard', 'Anthony Davis', 'Russell Westbrook', 'James Harden', 'Chris Paul', 'Klay Thompson', 'Draymond Green', 'Paul George', 'Kyrie Irving', 'Bradley Beal', 'Devin Booker', 'Donovan Mitchell', 'Ja Morant', 'Trae Young', 'Zion Williamson', 'Pascal Siakam', 'Bam Adebayo', 'Jaylen Brown', 'Tyler Herro'];\n  const startNewGame = () => {\n    // Use allPlayers if available, otherwise fall back to modernPlayers\n    const playersToUse = allPlayers.length > 0 ? allPlayers : modernPlayers;\n    const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n    setTargetPlayer(randomPlayer);\n    setGuess('');\n    setGuessHistory([]);\n    setGameWon(false);\n    setGuessCount(0);\n    setError('');\n    setTop5Players([]);\n    setShowAnswer(false);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n\n    // Immediately start a new game with the random player\n    console.log('New game started with:', randomPlayer);\n  };\n  useEffect(() => {\n    const loadPlayerNames = async () => {\n      try {\n        const response = await fetch('/players_cleaned.json');\n        const data = await response.json();\n        const playerNames = Object.keys(data);\n\n        // Clean and filter player names to remove problematic entries\n        const cleanedNames = playerNames.filter(name => {\n          const trimmed = name.trim();\n          // Filter out entries with special characters that suggest data issues\n          // and entries that are too short or empty\n          return trimmed.length >= 3 && !trimmed.includes('?') && !trimmed.includes('!') && !trimmed.includes('undefined') && !trimmed.includes('null') && /^[a-zA-Z\\s\\-\\.\\']+$/.test(trimmed); // Only allow letters, spaces, hyphens, dots, apostrophes\n        });\n\n        // Remove duplicates and sort\n        const uniquePlayerNames = [...new Set(cleanedNames)].sort();\n        setAllPlayers(uniquePlayerNames);\n\n        // Once players are loaded, start the game with a random one\n        const randomPlayer = uniquePlayerNames[Math.floor(Math.random() * uniquePlayerNames.length)];\n        setTargetPlayer(randomPlayer);\n      } catch (error) {\n        console.error('Could not load players_cleaned.json', error);\n        // fallback to modern players - also remove duplicates just in case\n        const fallback = [...new Set(modernPlayers)].sort();\n        setAllPlayers(fallback);\n        const randomPlayer = fallback[Math.floor(Math.random() * fallback.length)];\n        setTargetPlayer(randomPlayer);\n      }\n\n      // Reset game state\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    };\n    loadPlayerNames();\n  }, []);\n  const makeGuess = async () => {\n    if (!guess.trim()) return;\n\n    // Hide suggestions when making a guess\n    setShowSuggestions(false);\n    setSuggestions([]);\n    setSelectedSuggestionIndex(-1);\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: guess.trim(),\n          target: targetPlayer\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        const {\n          score,\n          matched_name,\n          breakdown,\n          top_5\n        } = result;\n        const newGuess = {\n          name: matched_name || guess.trim(),\n          score: score,\n          breakdown: breakdown || {}\n        };\n\n        // Check if this exact player (by matched_name) has already been guessed\n        const alreadyGuessed = guessHistory.some(g => g.name === newGuess.name);\n        if (!alreadyGuessed) {\n          setGuessHistory(prev => {\n            const updated = [...prev, newGuess];\n            return updated.sort((a, b) => b.score - a.score).slice(0, 15);\n          });\n          setGuessCount(prev => prev + 1);\n          if (score === 100) {\n            setGameWon(true);\n            setTop5Players(top_5 || []);\n          }\n        } else {\n          setError('You have already guessed this player!');\n        }\n        setGuess('');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Unknown error occurred');\n      }\n    } catch (err) {\n      setError('Connection error. Make sure the Flask server is running on port 5000');\n    }\n    setLoading(false);\n  };\n  const revealAnswer = async () => {\n    if (!targetPlayer) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/guess', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: targetPlayer,\n          target: targetPlayer\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setTop5Players(result.top_5 || []);\n      }\n    } catch (err) {\n      console.error('Error fetching top 5:', err);\n    }\n    setShowAnswer(true);\n    setLoading(false);\n  };\n  const handleSuggestionSelect = selectedName => {\n    setGuess(selectedName);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    setSelectedSuggestionIndex(-1);\n  };\n  const getScoreColor = score => {\n    if (score >= 80) return '#10b981'; // green\n    if (score >= 60) return '#f59e0b'; // yellow\n    if (score >= 40) return '#f97316'; // orange\n    return '#ef4444'; // red\n  };\n  const ScoreBar = ({\n    score,\n    showLabel = true\n  }) => {\n    const percentage = Math.max(0, Math.min(100, score));\n    const color = getScoreColor(score);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.75rem',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          height: '1.5rem',\n          background: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '0.75rem',\n          overflow: 'hidden',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100%',\n            width: `${percentage}%`,\n            background: `linear-gradient(90deg, ${color}dd, ${color})`,\n            borderRadius: '0.75rem',\n            transition: 'width 0.8s ease-out',\n            boxShadow: `0 0 10px ${color}40`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), showLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '50%',\n            left: '0.75rem',\n            transform: 'translateY(-50%)',\n            fontSize: '0.75rem',\n            fontWeight: 'bold',\n            color: percentage > 30 ? 'white' : color,\n            textShadow: percentage > 30 ? '0 1px 2px rgba(0,0,0,0.8)' : 'none'\n          },\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.9rem',\n          fontWeight: 'bold',\n          color: color,\n          minWidth: '3rem',\n          textAlign: 'right'\n        },\n        children: [score, \"/100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this);\n  };\n  const formatBreakdownKey = key => {\n    const labels = {\n      shared_seasons: 'Shared Seasons',\n      shared_streak_bonus: 'Streak Bonus',\n      teammate_years: 'Teammate Years',\n      franchise_overlap: 'Team Overlap',\n      franchise_tenure_bonus: 'Tenure Bonus',\n      archetype: 'Archetype',\n      position: 'Position',\n      draft_diff: 'Draft Era',\n      era_diff: 'Career Era',\n      career_end_proximity: 'Career End',\n      career_length: 'Career Length'\n    };\n    return labels[key] || key;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #1e40af 100%)',\n      color: 'white',\n      fontFamily: 'system-ui, -apple-system, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '1200px',\n        margin: '0 auto',\n        padding: '2rem 1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '1rem',\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '2rem'\n            },\n            children: \"\\uD83C\\uDFC0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '3rem',\n              fontWeight: 'bold',\n              background: 'linear-gradient(45deg, #f97316, #ef4444)',\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent',\n              margin: 0\n            },\n            children: \"NBA Similarity Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '2rem'\n            },\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            color: '#cbd5e1',\n            marginBottom: '1rem'\n          },\n          children: \"Guess the mystery NBA player by finding similar players!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '2rem',\n            fontSize: '0.9rem',\n            color: '#94a3b8'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u26A1 Attempt #\", guessCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#64748b'\n            },\n            children: \"Mystery Player: ???\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), (gameWon || showAnswer) && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#10b981',\n              fontWeight: 'bold'\n            },\n            children: [\"Answer: \", targetPlayer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: window.innerWidth > 1024 ? '1fr 2fr' : '1fr',\n          gap: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '1.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: \"\\uD83D\\uDD0D Make Your Guess\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '1rem',\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: guess,\n                onChange: e => {\n                  const value = e.target.value;\n                  setGuess(value);\n                  setSelectedSuggestionIndex(-1); // Reset selection when typing\n\n                  if (value.length > 0) {\n                    const searchTerm = value.toLowerCase().trim();\n\n                    // Filter players with better matching and data cleaning\n                    const filtered = allPlayers.filter(name => {\n                      const cleanName = name.toLowerCase().trim();\n                      // Skip entries that contain special characters that suggest data issues\n                      if (cleanName.includes('?') || cleanName.includes('!') || cleanName.length < 3) {\n                        return false;\n                      }\n                      return cleanName.includes(searchTerm);\n                    });\n\n                    // Remove duplicates, sort by relevance, and limit to 8 suggestions\n                    const uniqueFiltered = [...new Set(filtered)].sort((a, b) => {\n                      const aLower = a.toLowerCase();\n                      const bLower = b.toLowerCase();\n\n                      // Prioritize exact matches at the start\n                      const aStartsWith = aLower.startsWith(searchTerm);\n                      const bStartsWith = bLower.startsWith(searchTerm);\n                      if (aStartsWith && !bStartsWith) return -1;\n                      if (!aStartsWith && bStartsWith) return 1;\n\n                      // Then sort alphabetically\n                      return a.localeCompare(b);\n                    }).slice(0, 8);\n                    setSuggestions(uniqueFiltered);\n                    setShowSuggestions(true);\n                  } else {\n                    setSuggestions([]);\n                    setShowSuggestions(false);\n                  }\n\n                  // Clear any previous error when user starts typing\n                  if (error) setError('');\n                },\n                onKeyDown: e => {\n                  if (showSuggestions && suggestions.length > 0) {\n                    if (e.key === 'ArrowDown') {\n                      e.preventDefault();\n                      setSelectedSuggestionIndex(prev => prev < suggestions.length - 1 ? prev + 1 : 0);\n                    } else if (e.key === 'ArrowUp') {\n                      e.preventDefault();\n                      setSelectedSuggestionIndex(prev => prev > 0 ? prev - 1 : suggestions.length - 1);\n                    } else if (e.key === 'Enter') {\n                      e.preventDefault();\n                      if (selectedSuggestionIndex >= 0) {\n                        handleSuggestionSelect(suggestions[selectedSuggestionIndex]);\n                      } else {\n                        makeGuess();\n                      }\n                    } else if (e.key === 'Escape') {\n                      setShowSuggestions(false);\n                      setSuggestions([]);\n                      setSelectedSuggestionIndex(-1);\n                    }\n                  } else if (e.key === 'Enter') {\n                    e.preventDefault();\n                    makeGuess();\n                  }\n                },\n                onBlur: () => {\n                  // Delay hiding suggestions to allow for clicks\n                  setTimeout(() => {\n                    setShowSuggestions(false);\n                    setSuggestions([]);\n                    setSelectedSuggestionIndex(-1);\n                  }, 150);\n                },\n                placeholder: \"Enter NBA player name...\",\n                style: {\n                  width: '100%',\n                  padding: '0.75rem',\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontSize: '1rem',\n                  outline: 'none',\n                  boxSizing: 'border-box'\n                },\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  position: 'absolute',\n                  top: '100%',\n                  left: 0,\n                  right: 0,\n                  marginTop: '0.25rem',\n                  background: 'white',\n                  borderRadius: '0.5rem',\n                  padding: '0.5rem 0',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n                  color: 'black',\n                  maxHeight: '200px',\n                  overflowY: 'auto',\n                  zIndex: 1000,\n                  listStyle: 'none',\n                  margin: 0\n                },\n                children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onMouseDown: e => {\n                    e.preventDefault(); // Prevent blur from firing\n                    handleSuggestionSelect(suggestion);\n                  },\n                  onMouseEnter: () => setSelectedSuggestionIndex(index),\n                  style: {\n                    padding: '0.5rem 1rem',\n                    backgroundColor: index === selectedSuggestionIndex ? '#f0f0f0' : 'white',\n                    cursor: 'pointer',\n                    borderRadius: index === selectedSuggestionIndex ? '0.25rem' : '0',\n                    margin: index === selectedSuggestionIndex ? '0 0.25rem' : '0'\n                  },\n                  children: suggestion\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: makeGuess,\n                disabled: loading || !guess.trim(),\n                style: {\n                  width: '100%',\n                  padding: '0.75rem',\n                  background: loading || !guess.trim() ? 'linear-gradient(45deg, #6b7280, #4b5563)' : 'linear-gradient(45deg, #3b82f6, #8b5cf6)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontSize: '1rem',\n                  fontWeight: '600',\n                  cursor: loading || !guess.trim() ? 'not-allowed' : 'pointer',\n                  transition: 'all 0.2s ease'\n                },\n                children: loading ? 'Searching...' : 'Submit Guess'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem',\n                padding: '0.75rem',\n                background: 'rgba(239, 68, 68, 0.2)',\n                border: '1px solid rgba(239, 68, 68, 0.3)',\n                borderRadius: '0.5rem',\n                color: '#fca5a5'\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '3rem',\n                  marginBottom: '1rem'\n                },\n                children: \"\\uD83C\\uDF89\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#10b981',\n                  fontWeight: '600',\n                  fontSize: '1.2rem'\n                },\n                children: [\"Congratulations! You found \", targetPlayer, \" in \", guessCount, \" guesses!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this), showAnswer && !gameWon && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '3rem',\n                  marginBottom: '1rem'\n                },\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#3b82f6',\n                  fontWeight: '600',\n                  fontSize: '1.2rem'\n                },\n                children: [\"The answer was \", targetPlayer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.75rem',\n                marginTop: '1.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startNewGame,\n                style: {\n                  flex: 1,\n                  padding: '0.5rem 1rem',\n                  background: 'linear-gradient(45deg, #10b981, #059669)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '0.5rem'\n                },\n                children: \"\\uD83D\\uDD04 New Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 19\n              }, this), !gameWon && !showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: revealAnswer,\n                style: {\n                  flex: 1,\n                  padding: '0.5rem 1rem',\n                  background: 'linear-gradient(45deg, #f97316, #ef4444)',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  color: 'white',\n                  fontWeight: '600',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: '0.5rem'\n                },\n                children: \"\\uD83D\\uDC41\\uFE0F Reveal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), top5Players.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: \"\\uD83D\\uDCC8 Top 5 Most Similar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '1rem'\n              },\n              children: top5Players.map(([name, score], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '1rem',\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  borderRadius: '0.75rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.75rem',\n                    marginBottom: '0.75rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      width: '1.5rem',\n                      height: '1.5rem',\n                      background: 'linear-gradient(45deg, #f59e0b, #f97316)',\n                      borderRadius: '50%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontSize: '0.75rem',\n                      fontWeight: 'bold',\n                      color: 'black'\n                    },\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: '500',\n                      flex: 1\n                    },\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ScoreBar, {\n                  score: score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 25\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255, 255, 255, 0.1)',\n            backdropFilter: 'blur(10px)',\n            borderRadius: '1rem',\n            padding: '1.5rem',\n            border: '1px solid rgba(255, 255, 255, 0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '1.5rem',\n              fontWeight: '600',\n              marginBottom: '1rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [\"\\uD83D\\uDC65 Guess History (\", guessHistory.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), guessHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              padding: '3rem 0',\n              color: '#94a3b8'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '3rem',\n                marginBottom: '1rem',\n                opacity: 0.5\n              },\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No guesses yet. Start by entering a player name!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '1rem',\n              maxHeight: '500px',\n              overflowY: 'auto'\n            },\n            children: guessHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'rgba(255, 255, 255, 0.05)',\n                borderRadius: '0.75rem',\n                padding: '1rem',\n                border: '1px solid rgba(255, 255, 255, 0.1)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '1.1rem',\n                    fontWeight: '600',\n                    margin: 0,\n                    flex: 1\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(ScoreBar, {\n                  score: item.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 23\n              }, this), item.breakdown && Object.keys(item.breakdown).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                  gap: '0.5rem',\n                  fontSize: '0.8rem'\n                },\n                children: Object.entries(item.breakdown).filter(([key, value]) => key !== 'total' && key !== 'shared_seasons_detail' && value > 0).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    padding: '0.4rem 0.6rem',\n                    background: 'rgba(255, 255, 255, 0.05)',\n                    borderRadius: '0.25rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#cbd5e1'\n                    },\n                    children: formatBreakdownKey(key)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'white',\n                      fontWeight: '500'\n                    },\n                    children: [\"+\", value]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 33\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 31\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 7\n  }, this);\n};\n_s(NBAGuessGame, \"YKsgZJsf+WJw3T18O/dFyhvuK6w=\");\n_c = NBAGuessGame;\nexport default NBAGuessGame;\nvar _c;\n$RefreshReg$(_c, \"NBAGuessGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NBAGuessGame","_s","targetPlayer","setTargetPlayer","guess","setGuess","guessHistory","setGuessHistory","gameWon","setGameWon","guessCount","setGuessCount","loading","setLoading","error","setError","top5Players","setTop5Players","showAnswer","setShowAnswer","allPlayers","setAllPlayers","suggestions","setSuggestions","showSuggestions","setShowSuggestions","selectedSuggestionIndex","setSelectedSuggestionIndex","modernPlayers","startNewGame","playersToUse","length","randomPlayer","Math","floor","random","console","log","loadPlayerNames","response","fetch","data","json","playerNames","Object","keys","cleanedNames","filter","name","trimmed","trim","includes","test","uniquePlayerNames","Set","sort","fallback","makeGuess","method","headers","body","JSON","stringify","target","ok","result","score","matched_name","breakdown","top_5","newGuess","alreadyGuessed","some","g","prev","updated","a","b","slice","errorData","err","revealAnswer","handleSuggestionSelect","selectedName","getScoreColor","ScoreBar","showLabel","percentage","max","min","color","style","display","alignItems","gap","width","children","flex","height","background","borderRadius","overflow","position","transition","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","fontSize","fontWeight","textShadow","minWidth","textAlign","formatBreakdownKey","key","labels","shared_seasons","shared_streak_bonus","teammate_years","franchise_overlap","franchise_tenure_bonus","archetype","draft_diff","era_diff","career_end_proximity","career_length","minHeight","fontFamily","maxWidth","margin","padding","marginBottom","justifyContent","WebkitBackgroundClip","WebkitTextFillColor","gridTemplateColumns","window","innerWidth","flexDirection","backdropFilter","border","type","value","onChange","e","searchTerm","toLowerCase","filtered","cleanName","uniqueFiltered","aLower","bLower","aStartsWith","startsWith","bStartsWith","localeCompare","onKeyDown","preventDefault","onBlur","setTimeout","placeholder","outline","boxSizing","disabled","right","marginTop","maxHeight","overflowY","zIndex","listStyle","map","suggestion","index","onMouseDown","onMouseEnter","backgroundColor","cursor","onClick","opacity","item","entries","_c","$RefreshReg$"],"sources":["/Users/dzhang/Downloads/Recruiting/Coding/NBA-Mantle-6-5/nba-frontend/src/App.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\n\n  const NBAGuessGame = () => {\n    const [targetPlayer, setTargetPlayer] = useState('');\n    const [guess, setGuess] = useState('');\n    const [guessHistory, setGuessHistory] = useState([]);\n    const [gameWon, setGameWon] = useState(false);\n    const [guessCount, setGuessCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [top5Players, setTop5Players] = useState([]);\n    const [showAnswer, setShowAnswer] = useState(false);\n    const [allPlayers, setAllPlayers] = useState([]);\n    const [suggestions, setSuggestions] = useState([]);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n\n    // Fallback modern NBA players (only used if JSON loading fails)\n    const modernPlayers = [\n      'LeBron James', 'Stephen Curry', 'Kevin Durant', 'Giannis Antetokounmpo',\n      'Luka Doncic', 'Jayson Tatum', 'Joel Embiid', 'Nikola Jokic', 'Damian Lillard',\n      'Jimmy Butler', 'Kawhi Leonard', 'Anthony Davis', 'Russell Westbrook',\n      'James Harden', 'Chris Paul', 'Klay Thompson', 'Draymond Green',\n      'Paul George', 'Kyrie Irving', 'Bradley Beal', 'Devin Booker',\n      'Donovan Mitchell', 'Ja Morant', 'Trae Young', 'Zion Williamson',\n      'Pascal Siakam', 'Bam Adebayo', 'Jaylen Brown', 'Tyler Herro'\n    ];\n\n    const startNewGame = () => {\n      // Use allPlayers if available, otherwise fall back to modernPlayers\n      const playersToUse = allPlayers.length > 0 ? allPlayers : modernPlayers;\n      const randomPlayer = playersToUse[Math.floor(Math.random() * playersToUse.length)];\n      \n      setTargetPlayer(randomPlayer);\n      setGuess('');\n      setGuessHistory([]);\n      setGameWon(false);\n      setGuessCount(0);\n      setError('');\n      setTop5Players([]);\n      setShowAnswer(false);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n      \n      // Immediately start a new game with the random player\n      console.log('New game started with:', randomPlayer);\n    };\n\n    useEffect(() => {\n      const loadPlayerNames = async () => {\n        try {\n          const response = await fetch('/players_cleaned.json');\n          const data = await response.json();\n          const playerNames = Object.keys(data);\n          \n          // Clean and filter player names to remove problematic entries\n          const cleanedNames = playerNames.filter(name => {\n            const trimmed = name.trim();\n            // Filter out entries with special characters that suggest data issues\n            // and entries that are too short or empty\n            return trimmed.length >= 3 && \n                  !trimmed.includes('?') && \n                  !trimmed.includes('!') && \n                  !trimmed.includes('undefined') &&\n                  !trimmed.includes('null') &&\n                  /^[a-zA-Z\\s\\-\\.\\']+$/.test(trimmed); // Only allow letters, spaces, hyphens, dots, apostrophes\n          });\n          \n          // Remove duplicates and sort\n          const uniquePlayerNames = [...new Set(cleanedNames)].sort();\n          setAllPlayers(uniquePlayerNames);\n\n          // Once players are loaded, start the game with a random one\n          const randomPlayer = uniquePlayerNames[Math.floor(Math.random() * uniquePlayerNames.length)];\n          setTargetPlayer(randomPlayer);\n        } catch (error) {\n          console.error('Could not load players_cleaned.json', error);\n          // fallback to modern players - also remove duplicates just in case\n          const fallback = [...new Set(modernPlayers)].sort();\n          setAllPlayers(fallback);\n\n          const randomPlayer = fallback[Math.floor(Math.random() * fallback.length)];\n          setTargetPlayer(randomPlayer);\n        }\n\n        // Reset game state\n        setGuess('');\n        setGuessHistory([]);\n        setGameWon(false);\n        setGuessCount(0);\n        setError('');\n        setTop5Players([]);\n        setShowAnswer(false);\n        setSuggestions([]);\n        setShowSuggestions(false);\n        setSelectedSuggestionIndex(-1);\n      };\n\n      loadPlayerNames();\n    }, []);\n\n    const makeGuess = async () => {\n      if (!guess.trim()) return;\n      \n      // Hide suggestions when making a guess\n      setShowSuggestions(false);\n      setSuggestions([]);\n      setSelectedSuggestionIndex(-1);\n      \n      setLoading(true);\n      setError('');\n\n      try {\n        const response = await fetch('http://127.0.0.1:5000/guess', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            guess: guess.trim(),\n            target: targetPlayer\n          })\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          const { score, matched_name, breakdown, top_5 } = result;\n\n          const newGuess = {\n            name: matched_name || guess.trim(),\n            score: score,\n            breakdown: breakdown || {}\n          };\n\n          // Check if this exact player (by matched_name) has already been guessed\n          const alreadyGuessed = guessHistory.some(g => g.name === newGuess.name);\n          \n          if (!alreadyGuessed) {\n            setGuessHistory(prev => {\n              const updated = [...prev, newGuess];\n              return updated.sort((a, b) => b.score - a.score).slice(0, 15);\n            });\n\n            setGuessCount(prev => prev + 1);\n\n            if (score === 100) {\n              setGameWon(true);\n              setTop5Players(top_5 || []);\n            }\n          } else {\n            setError('You have already guessed this player!');\n          }\n\n          setGuess('');\n        } else {\n          const errorData = await response.json();\n          setError(errorData.error || 'Unknown error occurred');\n        }\n      } catch (err) {\n        setError('Connection error. Make sure the Flask server is running on port 5000');\n      }\n\n      setLoading(false);\n    };\n\n    const revealAnswer = async () => {\n      if (!targetPlayer) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetch('http://127.0.0.1:5000/guess', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            guess: targetPlayer,\n            target: targetPlayer\n          })\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          setTop5Players(result.top_5 || []);\n        }\n      } catch (err) {\n        console.error('Error fetching top 5:', err);\n      }\n      \n      setShowAnswer(true);\n      setLoading(false);\n    };\n\n    const handleSuggestionSelect = (selectedName) => {\n      setGuess(selectedName);\n      setSuggestions([]);\n      setShowSuggestions(false);\n      setSelectedSuggestionIndex(-1);\n    };\n\n    const getScoreColor = (score) => {\n      if (score >= 80) return '#10b981'; // green\n      if (score >= 60) return '#f59e0b'; // yellow\n      if (score >= 40) return '#f97316'; // orange\n      return '#ef4444'; // red\n    };\n\n    const ScoreBar = ({ score, showLabel = true }) => {\n      const percentage = Math.max(0, Math.min(100, score));\n      const color = getScoreColor(score);\n      \n      return (\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: '0.75rem',\n          width: '100%'\n        }}>\n          <div style={{\n            flex: 1,\n            height: '1.5rem',\n            background: 'rgba(255, 255, 255, 0.1)',\n            borderRadius: '0.75rem',\n            overflow: 'hidden',\n            position: 'relative'\n          }}>\n            <div style={{\n              height: '100%',\n              width: `${percentage}%`,\n              background: `linear-gradient(90deg, ${color}dd, ${color})`,\n              borderRadius: '0.75rem',\n              transition: 'width 0.8s ease-out',\n              boxShadow: `0 0 10px ${color}40`\n            }} />\n            {showLabel && (\n              <div style={{\n                position: 'absolute',\n                top: '50%',\n                left: '0.75rem',\n                transform: 'translateY(-50%)',\n                fontSize: '0.75rem',\n                fontWeight: 'bold',\n                color: percentage > 30 ? 'white' : color,\n                textShadow: percentage > 30 ? '0 1px 2px rgba(0,0,0,0.8)' : 'none'\n              }}>\n                {score}\n              </div>\n            )}\n          </div>\n          <div style={{\n            fontSize: '0.9rem',\n            fontWeight: 'bold',\n            color: color,\n            minWidth: '3rem',\n            textAlign: 'right'\n          }}>\n            {score}/100\n          </div>\n        </div>\n      );\n    };\n\n    const formatBreakdownKey = (key) => {\n      const labels = {\n        shared_seasons: 'Shared Seasons',\n        shared_streak_bonus: 'Streak Bonus',\n        teammate_years: 'Teammate Years',\n        franchise_overlap: 'Team Overlap',\n        franchise_tenure_bonus: 'Tenure Bonus',\n        archetype: 'Archetype',\n        position: 'Position',\n        draft_diff: 'Draft Era',\n        era_diff: 'Career Era',\n        career_end_proximity: 'Career End',\n        career_length: 'Career Length'\n      };\n      return labels[key] || key;\n    };\n\n    return (\n      <div style={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #1e1b4b 0%, #312e81 50%, #1e40af 100%)',\n        color: 'white',\n        fontFamily: 'system-ui, -apple-system, sans-serif'\n      }}>\n        <div style={{\n          maxWidth: '1200px',\n          margin: '0 auto',\n          padding: '2rem 1rem'\n        }}>\n          {/* Header */}\n          <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n            <div style={{ \n              display: 'flex', \n              alignItems: 'center', \n              justifyContent: 'center', \n              gap: '1rem',\n              marginBottom: '1rem'\n            }}>\n              <span style={{ fontSize: '2rem' }}>🏀</span>\n              <h1 style={{\n                fontSize: '3rem',\n                fontWeight: 'bold',\n                background: 'linear-gradient(45deg, #f97316, #ef4444)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                margin: 0\n              }}>\n                NBA Similarity Game\n              </h1>\n              <span style={{ fontSize: '2rem' }}>🎯</span>\n            </div>\n            \n            <p style={{ \n              fontSize: '1.2rem', \n              color: '#cbd5e1',\n              marginBottom: '1rem'\n            }}>\n              Guess the mystery NBA player by finding similar players!\n            </p>\n            \n            <div style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '2rem',\n              fontSize: '0.9rem',\n              color: '#94a3b8'\n            }}>\n              <span>⚡ Attempt #{guessCount}</span>\n              {!gameWon && !showAnswer && (\n                <span style={{ color: '#64748b' }}>Mystery Player: ???</span>\n              )}\n              {(gameWon || showAnswer) && (\n                <span style={{ color: '#10b981', fontWeight: 'bold' }}>\n                  Answer: {targetPlayer}\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: window.innerWidth > 1024 ? '1fr 2fr' : '1fr',\n            gap: '2rem'\n          }}>\n            {/* Left Panel - Game Controls */}\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n              {/* Input Section */}\n              <div style={{\n                background: 'rgba(255, 255, 255, 0.1)',\n                backdropFilter: 'blur(10px)',\n                borderRadius: '1rem',\n                padding: '1.5rem',\n                border: '1px solid rgba(255, 255, 255, 0.2)'\n              }}>\n                <h3 style={{\n                  fontSize: '1.5rem',\n                  fontWeight: '600',\n                  marginBottom: '1rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem'\n                }}>\n                  🔍 Make Your Guess\n                </h3>\n                \n                {!gameWon && !showAnswer && (\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', position: 'relative' }}>\n                    <input\n                      type=\"text\"\n                      value={guess}\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        setGuess(value);\n                        setSelectedSuggestionIndex(-1); // Reset selection when typing\n                        \n                        if (value.length > 0) {\n                          const searchTerm = value.toLowerCase().trim();\n                          \n                          // Filter players with better matching and data cleaning\n                          const filtered = allPlayers.filter(name => {\n                            const cleanName = name.toLowerCase().trim();\n                            // Skip entries that contain special characters that suggest data issues\n                            if (cleanName.includes('?') || cleanName.includes('!') || cleanName.length < 3) {\n                              return false;\n                            }\n                            return cleanName.includes(searchTerm);\n                          });\n                          \n                          // Remove duplicates, sort by relevance, and limit to 8 suggestions\n                          const uniqueFiltered = [...new Set(filtered)]\n                            .sort((a, b) => {\n                              const aLower = a.toLowerCase();\n                              const bLower = b.toLowerCase();\n                              \n                              // Prioritize exact matches at the start\n                              const aStartsWith = aLower.startsWith(searchTerm);\n                              const bStartsWith = bLower.startsWith(searchTerm);\n                              \n                              if (aStartsWith && !bStartsWith) return -1;\n                              if (!aStartsWith && bStartsWith) return 1;\n                              \n                              // Then sort alphabetically\n                              return a.localeCompare(b);\n                            })\n                            .slice(0, 8);\n                            \n                          setSuggestions(uniqueFiltered);\n                          setShowSuggestions(true);\n                        } else {\n                          setSuggestions([]);\n                          setShowSuggestions(false);\n                        }\n                        \n                        // Clear any previous error when user starts typing\n                        if (error) setError('');\n                      }}\n                      onKeyDown={(e) => {\n                        if (showSuggestions && suggestions.length > 0) {\n                          if (e.key === 'ArrowDown') {\n                            e.preventDefault();\n                            setSelectedSuggestionIndex(prev => \n                              prev < suggestions.length - 1 ? prev + 1 : 0\n                            );\n                          } else if (e.key === 'ArrowUp') {\n                            e.preventDefault();\n                            setSelectedSuggestionIndex(prev => \n                              prev > 0 ? prev - 1 : suggestions.length - 1\n                            );\n                          } else if (e.key === 'Enter') {\n                            e.preventDefault();\n                            if (selectedSuggestionIndex >= 0) {\n                              handleSuggestionSelect(suggestions[selectedSuggestionIndex]);\n                            } else {\n                              makeGuess();\n                            }\n                          } else if (e.key === 'Escape') {\n                            setShowSuggestions(false);\n                            setSuggestions([]);\n                            setSelectedSuggestionIndex(-1);\n                          }\n                        } else if (e.key === 'Enter') {\n                          e.preventDefault();\n                          makeGuess();\n                        }\n                      }}\n                      onBlur={() => {\n                        // Delay hiding suggestions to allow for clicks\n                        setTimeout(() => {\n                          setShowSuggestions(false);\n                          setSuggestions([]);\n                          setSelectedSuggestionIndex(-1);\n                        }, 150);\n                      }}\n                      placeholder=\"Enter NBA player name...\"\n                      style={{\n                        width: '100%',\n                        padding: '0.75rem',\n                        background: 'rgba(255, 255, 255, 0.1)',\n                        border: '1px solid rgba(255, 255, 255, 0.2)',\n                        borderRadius: '0.5rem',\n                        color: 'white',\n                        fontSize: '1rem',\n                        outline: 'none',\n                        boxSizing: 'border-box'\n                      }}\n                      disabled={loading}\n                    />\n                    {showSuggestions && suggestions.length > 0 && (\n                      <ul style={{\n                        position: 'absolute',\n                        top: '100%',\n                        left: 0,\n                        right: 0,\n                        marginTop: '0.25rem',\n                        background: 'white',\n                        borderRadius: '0.5rem',\n                        padding: '0.5rem 0',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n                        color: 'black',\n                        maxHeight: '200px',\n                        overflowY: 'auto',\n                        zIndex: 1000,\n                        listStyle: 'none',\n                        margin: 0\n                      }}>\n                        {suggestions.map((suggestion, index) => (\n                          <li\n                            key={index}\n                            onMouseDown={(e) => {\n                              e.preventDefault(); // Prevent blur from firing\n                              handleSuggestionSelect(suggestion);\n                            }}\n                            onMouseEnter={() => setSelectedSuggestionIndex(index)}\n                            style={{\n                              padding: '0.5rem 1rem',\n                              backgroundColor: index === selectedSuggestionIndex ? '#f0f0f0' : 'white',\n                              cursor: 'pointer',\n                              borderRadius: index === selectedSuggestionIndex ? '0.25rem' : '0',\n                              margin: index === selectedSuggestionIndex ? '0 0.25rem' : '0'\n                            }}\n                          >\n                            {suggestion}\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                    <button\n                      onClick={makeGuess}\n                      disabled={loading || !guess.trim()}\n                      style={{\n                        width: '100%',\n                        padding: '0.75rem',\n                        background: loading || !guess.trim() \n                          ? 'linear-gradient(45deg, #6b7280, #4b5563)'\n                          : 'linear-gradient(45deg, #3b82f6, #8b5cf6)',\n                        border: 'none',\n                        borderRadius: '0.5rem',\n                        color: 'white',\n                        fontSize: '1rem',\n                        fontWeight: '600',\n                        cursor: loading || !guess.trim() ? 'not-allowed' : 'pointer',\n                        transition: 'all 0.2s ease'\n                      }}\n                    >\n                      {loading ? 'Searching...' : 'Submit Guess'}\n                    </button>\n                  </div>\n\n                )}\n\n                {error && (\n                  <div style={{\n                    marginTop: '1rem',\n                    padding: '0.75rem',\n                    background: 'rgba(239, 68, 68, 0.2)',\n                    border: '1px solid rgba(239, 68, 68, 0.3)',\n                    borderRadius: '0.5rem',\n                    color: '#fca5a5'\n                  }}>\n                    {error}\n                  </div>\n                )}\n\n                {gameWon && (\n                  <div style={{ textAlign: 'center' }}>\n                    <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>🎉</div>\n                    <p style={{ color: '#10b981', fontWeight: '600', fontSize: '1.2rem' }}>\n                      Congratulations! You found {targetPlayer} in {guessCount} guesses!\n                    </p>\n                  </div>\n                )}\n\n                {showAnswer && !gameWon && (\n                  <div style={{ textAlign: 'center' }}>\n                    <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>🎯</div>\n                    <p style={{ color: '#3b82f6', fontWeight: '600', fontSize: '1.2rem' }}>\n                      The answer was {targetPlayer}\n                    </p>\n                  </div>\n                )}\n\n                <div style={{ display: 'flex', gap: '0.75rem', marginTop: '1.5rem' }}>\n                  <button\n                    onClick={startNewGame}\n                    style={{\n                      flex: 1,\n                      padding: '0.5rem 1rem',\n                      background: 'linear-gradient(45deg, #10b981, #059669)',\n                      border: 'none',\n                      borderRadius: '0.5rem',\n                      color: 'white',\n                      fontWeight: '600',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '0.5rem'\n                    }}\n                  >\n                    🔄 New Game\n                  </button>\n                  \n                  {!gameWon && !showAnswer && (\n                    <button\n                      onClick={revealAnswer}\n                      style={{\n                        flex: 1,\n                        padding: '0.5rem 1rem',\n                        background: 'linear-gradient(45deg, #f97316, #ef4444)',\n                        border: 'none',\n                        borderRadius: '0.5rem',\n                        color: 'white',\n                        fontWeight: '600',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        gap: '0.5rem'\n                      }}\n                    >\n                      👁️ Reveal\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Top 5 Similar Players */}\n              {top5Players.length > 0 && (\n                <div style={{\n                  background: 'rgba(255, 255, 255, 0.1)',\n                  backdropFilter: 'blur(10px)',\n                  borderRadius: '1rem',\n                  padding: '1.5rem',\n                  border: '1px solid rgba(255, 255, 255, 0.2)'\n                }}>\n                  <h3 style={{\n                    fontSize: '1.5rem',\n                    fontWeight: '600',\n                    marginBottom: '1rem',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.5rem'\n                  }}>\n                    📈 Top 5 Most Similar\n                  </h3>\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n                    {top5Players.map(([name, score], index) => (\n                      <div key={name} style={{\n                        padding: '1rem',\n                        background: 'rgba(255, 255, 255, 0.05)',\n                        borderRadius: '0.75rem'\n                      }}>\n                        <div style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: '0.75rem',\n                          marginBottom: '0.75rem'\n                        }}>\n                          <span style={{\n                            width: '1.5rem',\n                            height: '1.5rem',\n                            background: 'linear-gradient(45deg, #f59e0b, #f97316)',\n                            borderRadius: '50%',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            fontSize: '0.75rem',\n                            fontWeight: 'bold',\n                            color: 'black'\n                          }}>\n                            {index + 1}\n                          </span>\n                          <span style={{ fontWeight: '500', flex: 1 }}>{name}</span>\n                        </div>\n                        <ScoreBar score={score} />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Right Panel - Guess History */}\n            <div style={{\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)',\n              borderRadius: '1rem',\n              padding: '1.5rem',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            }}>\n              <h3 style={{\n                fontSize: '1.5rem',\n                fontWeight: '600',\n                marginBottom: '1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}>\n                👥 Guess History ({guessHistory.length})\n              </h3>\n              \n              {guessHistory.length === 0 ? (\n                <div style={{ \n                  textAlign: 'center', \n                  padding: '3rem 0', \n                  color: '#94a3b8'\n                }}>\n                  <div style={{ fontSize: '3rem', marginBottom: '1rem', opacity: 0.5 }}>🔍</div>\n                  <p>No guesses yet. Start by entering a player name!</p>\n                </div>\n              ) : (\n                <div style={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  gap: '1rem',\n                  maxHeight: '500px',\n                  overflowY: 'auto'\n                }}>\n                  {guessHistory.map((item, index) => (\n                    <div key={index} style={{\n                      background: 'rgba(255, 255, 255, 0.05)',\n                      borderRadius: '0.75rem',\n                      padding: '1rem',\n                      border: '1px solid rgba(255, 255, 255, 0.1)'\n                    }}>\n                      <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'space-between',\n                        marginBottom: '1rem'\n                      }}>\n                        <h4 style={{ \n                          fontSize: '1.1rem', \n                          fontWeight: '600',\n                          margin: 0,\n                          flex: 1\n                        }}>\n                          {item.name}\n                        </h4>\n                      </div>\n                      \n                      <div style={{ marginBottom: '1rem' }}>\n                        <ScoreBar score={item.score} />\n                      </div>\n                      \n                      {item.breakdown && Object.keys(item.breakdown).length > 0 && (\n                        <div style={{\n                          display: 'grid',\n                          gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                          gap: '0.5rem',\n                          fontSize: '0.8rem'\n                        }}>\n                          {Object.entries(item.breakdown)\n                            .filter(([key, value]) => \n                              key !== 'total' && \n                              key !== 'shared_seasons_detail' && \n                              value > 0\n                            )\n                            .map(([key, value]) => (\n                              <div key={key} style={{\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                padding: '0.4rem 0.6rem',\n                                background: 'rgba(255, 255, 255, 0.05)',\n                                borderRadius: '0.25rem'\n                              }}>\n                                <span style={{ color: '#cbd5e1' }}>\n                                  {formatBreakdownKey(key)}\n                                </span>\n                                <span style={{ color: 'white', fontWeight: '500' }}>\n                                  +{value}\n                                </span>\n                              </div>\n                            ))}\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  export default NBAGuessGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}